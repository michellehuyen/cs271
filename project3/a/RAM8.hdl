// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // for this chip I knew I needed to have 8 of the register chip thingys but I wasn't sure what
    // else I needed to complete this chip so I googled a picture of its structure and that's how I completed it.
    // I saw what other logic gates I needed for this chip and was able to complete it.
    // Once I completed this chip I realized that all the other RAM chips would basically have the same structure so I just
    // copied my work from here to the other chips and altered what needed to be altered.
    DMux8Way(in = load, sel = address, a = a, b = b, c = c, d = d, e = e, f = f, g = g, h = h);

    Register(in = in, load = a, out = register0);
    Register(in = in, load = b, out = register1);
    Register(in = in, load = c, out = register2);
    Register(in = in, load = d, out = register3);
    Register(in = in, load = e, out = register4);
    Register(in = in, load = f, out = register5);
    Register(in = in, load = g, out = register6);
    Register(in = in, load = h, out = register7);

    Mux8Way16(a = register0, b = register1, c = register2, d = register3, e = register4, f = register5, g = register6, h = register7, sel = address, out = out);   
}